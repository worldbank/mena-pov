# MENA POV
# Master R Script
# Organization
# * Filepaths: To make code work, change paths in "Root file path"
# * Parameters: Parameters used throughout scripts
# * Libraries: Load R packages and user defined functions
# FILEPATHS ====================================================================
#### Root
github_dir  <- "C:/Users/wb569257/OneDrive - WBG/Documents/GitHub"
local_dir   <- "M:"
#### Data
lbn_file_path <- file.path(local_dir,"LBN","GEO")
lbn_onedrive_dir <- file.path("C:/Users/wb569257/OneDrive - WBG/MENAPOV Geospatial Documents - MENAPOV Geospatial Files/Projects/lbn_ntl_analysis")
yem_file_path <- file.path(local_dir,"YEM","GEO")
jor_file_path <- file.path(local_dir,"JOR","GEO")
jor_onedrive_dir <- file.path("C:/Users/wb569257/OneDrive - WBG/Jordan")
mena_file_path <- file.path(local_dir,"MENA","GEO")
global_file_path <- file.path(local_dir, "GEOGlobal")
mor_file_path <- file.path(local_dir,"MOR","GEO")
mor_onedrive_dir <- file.path("C:/Users/wb569257/OneDrive - WBG/MENAPOV Geospatial Documents - MENAPOV Geospatial Files/Projects/mor_earthquake_analysis")
lby_file_path <- file.path(local_dir, "LBY", "GEO")
#### Overleaf
tables_dir  <- "PATH"
figures_dir <- "PATH"
# PARAMETERS ===================================================================
UTM_JOR <- '+init=epsg:3394'
UTM_LBN <- '+init=epsg:32637'
UTM_YEM <- '+init=epsg:5836'
N_CORES <- 2
# LIBRARIES ====================================================================
# Install the GitHub package if F is TRUE
if(F){
library(pacman)
remotes::install_github("crazycapivara/h3-r")
}
packages <- c("sp", "purrr", "raster","readr","dplyr","parallel","pbmcapply",
"rgdal","rgeos","geosphere","sf","broom","gdistance","data.table",
"ggpubr","reshape","doBy","readstata13","haven","ggmap","gtools",
"readxl","ggrepel", "plm","stargazer","xml2","mapsapi","leaflet",
"XML", "tmap","lubridate", "hrbrthemes", "tidyr","stringr","lfe",
"devtools", "usethis","viridisLite","viridis","jtools","osrm",
"formattable","geojsonio","DataCombine","nngeo","qwraps2","pastecs",
"htmlwidgets","car","visreg","fuzzyjoin","leaflet.extras",
"maptools","mapview","lmtest","multiwayvcov","ggplot2","sjlabelled",
"dtplyr","expss","h3jsr", "spdplyr", "janitor",
"tidygraph", "sparklyr", "styler","remotes",
"h3","arrow","fs","jsonlite", "geodata", "osrm",
"stplanr", "exactextractr", "rjson", "patchwork", "ggmap",
"progress",'haven','dplyr', 'reshape2', 'tidyverse',
'pracma','lubridate', 'scales', 'stringr', 'tidymodels',
'flextable', 'rsample', 'hdm', 'pROC', 'glmnet',
'tibble',"xlsx","GGally","xtable","pls","ggcorrplot","caret","sandwich", "KRLS",
"classInt", "RColorBrewer", "splines","ggeffects", "exactextractr","ggsn", "ggspatial", "gridExtra")
# Install each package
for (pkg in packages) {
# Check if the package is already installed
if (!require(pkg, character.only = TRUE)) {
tryCatch({
install.packages(pkg, dependencies = TRUE)
library(pkg, character.only = TRUE)
}, error = function(e) {
cat("ERROR:", e$message, "in installing", pkg, "\n")
})
}
}
